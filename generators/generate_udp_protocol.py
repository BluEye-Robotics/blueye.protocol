import hashlib
import json
import os
from collections import OrderedDict


def md5(fname):
    hash_md5 = hashlib.md5()
    with open(fname, "rb") as f:
        for chunk in iter(lambda: f.read(4096), b""):
            hash_md5.update(chunk)
    return hash_md5.hexdigest()


def generate():
    # Get the directory of the current script
    script_dir = os.path.dirname(os.path.abspath(__file__))

    # Paths relative to the script directory
    protocol_definitions_path = os.path.join(script_dir, "../ProtocolDefinitions/udp_protocol.json")
    output_path = os.path.join(script_dir, "../legacyprotocol/blueye/legacyprotocol/udp_protocol_dict.py")

    # Read and process the protocol definitions
    with open(protocol_definitions_path, "r") as f:
        data = json.loads(f.read(), object_pairs_hook=OrderedDict)

    protocol_md5 = md5(protocol_definitions_path)
    generator_script_md5 = md5(os.path.abspath(__file__))

    # Generate the output file content
    data_file = f"""# -*- coding: utf-8 -*-
# This file is autogenerated. Please do not edit
from collections import OrderedDict
_json_hash = "{protocol_md5}"
_generator_hash = "{generator_script_md5}"
protocol_data = {str(data)}

"""

    # Write the output file
    with open(output_path, "w") as f:
        f.write(data_file)
